# derived from https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml
name: Release

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
    - master

    # Publish `v1.2.3` tags as releases.
    tags:
    - v*

env:
  IMAGE_NAME: khelm

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Test
      run: make khelm test lint e2e-test

    - name: Build image
      run: make image IMAGE=$IMAGE_NAME

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        set -e

        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        TAGS=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && TAGS=$(echo $TAGS | sed -e 's/^v//')

        # Use Docker `latest` tag convention and also publish latest tag with every other tag
        [ "$TAGS" == "master" ] && TAGS=latest || TAGS="latest $TAGS"

        for TAG in VERSION; do
          echo Push $IMAGE_ID:$TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$TAG
          docker push $IMAGE_ID:$TAG
        done
